name: Workflows
on:
  push:
    branches:
      - '*'
jobs:
  CI:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, 'no-ci') }}
    steps:
      - name: ➕ Actions - Checkout
        uses: actions/checkout@v3

      - name: ➕ Actions - Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: ➕ Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: 📦 Installing Dependencies
        run: npm ci

      - name: 🐳 Building MySQL Container Container
        run: docker-compose -f ./.github/workflows/docker/docker-compose.yml up -d

      - name: 🤹🏻‍♀️ Building the Project
        run: npm run build

      - name: 🤹🏻‍♀️ Building Tests
        run: npm run test:build

      - name: 🥷🏻 Waiting for MySQL to be Ready for Connections
        run: sleep 8

      - name: 🧪 Testing Services - Insert
        run: npm run test:insert

      - name: 🧪 Testing Services - Delete
        run: npm run test:delete

      - name: 🧪 Testing Services - Update
        run: npm run test:update

      - name: 🧪 Testing Services - Select
        run: npm run test:select

      - name: 🧪 Testing Services - Original Connection
        run: npm run test:original

  Publish:
    runs-on: ubuntu-latest
    needs: [CI]
    if: github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'v')
    steps:
      - name: ➕ Actions - Checkout
        uses: actions/checkout@v3

      - name: ➕ Actions - Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: ➕ Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: 📦 Installing Dependencies
        run: npm ci

      - name: 🤹🏻‍♀️ Building the Project
        run: npm run build

      - name: 📂 Checking "lib"
        run: |
          if [ ! -d "./lib" ]; then
            echo "Directory ./lib doesn't exist"
            exit 1
          fi

      - name: 📂 Checking "lib/index.js"
        run: |
          if [ ! -f "./lib/index.js" ]; then
            echo "File ./lib.index.js doesn't exist"
            exit 1
          fi

      - name: 📥 Publishing Package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
